{
  "api/CG.Reflection.AppDomainExtensions.html": {
    "href": "api/CG.Reflection.AppDomainExtensions.html",
    "title": "Class AppDomainExtensions",
    "keywords": "Class AppDomainExtensions This class contains extension methods related to the System.AppDomain type, for registering types related to reflection. Inheritance System.Object AppDomainExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Reflection Assembly : CG.Reflection.dll Syntax public static class AppDomainExtensions Methods ExtensionMethods(AppDomain, Type, String, Type[], String, String) This method searches among the assemblies loaded into the current app-domain for any public extension methods associated with the specified type and signature. Declaration public static IEnumerable<MethodInfo> ExtensionMethods(this AppDomain appDomain, Type extensionType, string methodName, Type[] parameterTypes = null, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description System.AppDomain appDomain The application domain to use for the operation. System.Type extensionType The type to match against. System.String methodName The method name to match against. System.Type [] parameterTypes An optional list of parameter type(s) to match against. System.String assemblyWhiteList An optional white list of assembly names - for narrowing the range of assemblies searched. System.String assemblyBlackList An optional white list of assembly names - for narrowing the range of assemblies searched. Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MethodInfo > A sequence of System.Reflection.MethodInfo objects representing zero or more matching extension methods. ExtensionMethods<T>(AppDomain, Type, String, Type[], String, String) This method searches among the assemblies loaded into the current app-domain for any public extension methods associated with the specified type and signature. Declaration public static IEnumerable<MethodInfo> ExtensionMethods<T>(this AppDomain appDomain, Type extensionType, string methodName, Type[] parameterTypes = null, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description System.AppDomain appDomain The application domain to use for the operation. System.Type extensionType The type to match against. System.String methodName The method name to match against. System.Type [] parameterTypes An optional list of parameter type(s) to match against. System.String assemblyWhiteList An optional white list of assembly names - for narrowing the range of assemblies searched. System.String assemblyBlackList An optional white list of assembly names - for narrowing the range of assemblies searched. Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MethodInfo > A sequence of System.Reflection.MethodInfo objects representing zero or more matching extension methods. Type Parameters Name Description T The type of generic argument to match. ExtensionMethods<T1, T2>(AppDomain, Type, String, Type[], String, String) This method searches among the assemblies loaded into the current app-domain for any public extension methods associated with the specified type and signature. Declaration public static IEnumerable<MethodInfo> ExtensionMethods<T1, T2>(this AppDomain appDomain, Type extensionType, string methodName, Type[] parameterTypes = null, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description System.AppDomain appDomain The application domain to use for the operation. System.Type extensionType The type to match against. System.String methodName The method name to match against. System.Type [] parameterTypes An optional list of parameter type(s) to match against. System.String assemblyWhiteList An optional white list of assembly names - for narrowing the range of assemblies searched. System.String assemblyBlackList An optional white list of assembly names - for narrowing the range of assemblies searched. Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MethodInfo > A sequence of System.Reflection.MethodInfo objects representing zero or more matching extension methods. Type Parameters Name Description T1 The first type argument to match. T2 The second type argument to match."
  },
  "api/CG.Reflection.AssemblyExtensions.html": {
    "href": "api/CG.Reflection.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions",
    "keywords": "Class AssemblyExtensions This class contains extension methods reated to the System.Reflection.Assembly type. Inheritance System.Object AssemblyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Reflection Assembly : CG.Reflection.dll Syntax public static class AssemblyExtensions Methods ReadAssemblyVersion(Assembly) Reads the value of the System.Reflection.AssemblyVersionAttribute attribute for the given assembly. Declaration public static string ReadAssemblyVersion(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's version attribute. ReadCompany(Assembly) Reads the value of the System.Reflection.AssemblyCompanyAttribute attribute for the given assembly. Declaration public static string ReadCompany(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's company attribute. ReadCopyright(Assembly) Reads the value of the System.Reflection.AssemblyCopyrightAttribute attribute for the given assembly. Declaration public static string ReadCopyright(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's copyright attribute. ReadDescription(Assembly) Reads the value of the System.Reflection.AssemblyDescriptionAttribute attribute for the given assembly. Declaration public static string ReadDescription(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's description attribute. ReadGuid(Assembly) Reads the value of the System.Runtime.InteropServices.GuidAttribute attribute attribute for the given assembly. Declaration public static string ReadGuid(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's guid attribute. ReadInformationalVersion(Assembly) Reads the value of the System.Reflection.AssemblyInformationalVersionAttribute attribute for the given assembly. Declaration public static string ReadInformationalVersion(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's informational version attribute. ReadProduct(Assembly) Reads the value of the System.Reflection.AssemblyProductAttribute attribute for the given assembly. Declaration public static string ReadProduct(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's product attribute. ReadTitle(Assembly) Reads the value of the System.Reflection.AssemblyTitleAttribute attribute for the given assembly. Declaration public static string ReadTitle(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's title attribute. ReadTrademark(Assembly) Reads the value of the System.Reflection.AssemblyTrademarkAttribute attribute for the given assembly. Declaration public static string ReadTrademark(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The assembly to read from. Returns Type Description System.String The value of the given assembly's trademark attribute."
  },
  "api/CG.Reflection.html": {
    "href": "api/CG.Reflection.html",
    "title": "Namespace CG.Reflection",
    "keywords": "Namespace CG.Reflection Classes AppDomainExtensions This class contains extension methods related to the System.AppDomain type, for registering types related to reflection. AssemblyExtensions This class contains extension methods reated to the System.Reflection.Assembly type. PropertyCache This class represents cached property reflection information."
  },
  "api/CG.Reflection.PropertyCache.html": {
    "href": "api/CG.Reflection.PropertyCache.html",
    "title": "Class PropertyCache",
    "keywords": "Class PropertyCache This class represents cached property reflection information. Inheritance System.Object PropertyCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Reflection Assembly : CG.Reflection.dll Syntax public class PropertyCache Remarks The idea, with this class, is to make it easier to reach out and quickly grab property information for a type. Also, to have that same information cached locally to avoid unnecessary reflection. Properties Item[Type, String] This indexer gets/sets cached property information. Declaration public PropertyInfo this[Type type, string property] { get; } Parameters Type Name Description System.Type type The type to use for the operation. System.String property The property to use for the operation. Property Value Type Description System.Reflection.PropertyInfo Cached property information."
  },
  "api/CG.Reflection.Services.html": {
    "href": "api/CG.Reflection.Services.html",
    "title": "Namespace CG.Reflection.Services",
    "keywords": "Namespace CG.Reflection.Services Classes PackageService This class is a default implementation of the IPackageService interface. Interfaces IPackageInfo This interface represents an object that contains package information about a .NET assembly. IPackageService This interface represents an object that contains good-to-know information about well-known assemblies and their components."
  },
  "api/CG.Reflection.Services.IPackageInfo.html": {
    "href": "api/CG.Reflection.Services.IPackageInfo.html",
    "title": "Interface IPackageInfo",
    "keywords": "Interface IPackageInfo This interface represents an object that contains package information about a .NET assembly. Namespace : CG.Reflection.Services Assembly : CG.Reflection.dll Syntax public interface IPackageInfo Properties AssemblyVersion This property contains the assembly version for the package. Declaration Version AssemblyVersion { get; } Property Value Type Description System.Version Company This property contains the company name for the package. Declaration string Company { get; } Property Value Type Description System.String Copyright This property contains the copyright for the package. Declaration string Copyright { get; } Property Value Type Description System.String Description This property contains the description for the package. Declaration string Description { get; } Property Value Type Description System.String FileVersion This property contains the file version for the package. Declaration Version FileVersion { get; } Property Value Type Description System.Version Guid This property contains the GUID for the package. Declaration Guid? Guid { get; } Property Value Type Description System.Nullable < System.Guid > InformationalVersion This property contains the nuget version for the package. Declaration Version InformationalVersion { get; } Property Value Type Description System.Version Product This property contains the product name for the package. Declaration string Product { get; } Property Value Type Description System.String Title This property contains the title for the package. Declaration string Title { get; } Property Value Type Description System.String Trademark This property contains the trademark for the package. Declaration string Trademark { get; } Property Value Type Description System.String"
  },
  "api/CG.Reflection.Services.IPackageService.html": {
    "href": "api/CG.Reflection.Services.IPackageService.html",
    "title": "Interface IPackageService",
    "keywords": "Interface IPackageService This interface represents an object that contains good-to-know information about well-known assemblies and their components. Namespace : CG.Reflection.Services Assembly : CG.Reflection.dll Syntax public interface IPackageService Properties CallingAssembly This property contains package information for the calling assembly. Declaration IPackageInfo CallingAssembly { get; } Property Value Type Description IPackageInfo EntryAssembly This property contains package information for the entry assembly. Declaration IPackageInfo EntryAssembly { get; } Property Value Type Description IPackageInfo"
  },
  "api/CG.Reflection.Services.PackageService.html": {
    "href": "api/CG.Reflection.Services.PackageService.html",
    "title": "Class PackageService",
    "keywords": "Class PackageService This class is a default implementation of the IPackageService interface. Inheritance System.Object PackageService Implements IPackageService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Reflection.Services Assembly : CG.Reflection.dll Syntax public class PackageService : IPackageService Constructors PackageService() This constructor creates a new instance of the PackageService class. Declaration public PackageService() Properties CallingAssembly This property contains package information for the calling assembly. Declaration public IPackageInfo CallingAssembly { get; } Property Value Type Description IPackageInfo EntryAssembly This property contains package information for the entry assembly. Declaration public IPackageInfo EntryAssembly { get; } Property Value Type Description IPackageInfo Implements IPackageService"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Reflection.dll contains general purpose reflection classes used by other CodeGator packages."
  }
}